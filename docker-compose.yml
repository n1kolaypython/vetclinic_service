version: '3'

services:
  vetclinic_postgres:
    container_name: vetclinic_postgres_db
    image: postgres:latest
    ports:
      - "${DB_PORT}:5432"
    networks:
      - vetclinic_service_network
    environment:
      POSTGRES_DB: "${DB_NAME}"
      POSTGRES_USER: "${DB_USER_NAME}"
      POSTGRES_PASSWORD: "${DB_USER_PASSWORD}"
    volumes:
      - "./local/var/lib/postgresql/data:/var/lib/postgresql/data"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 5

  flyway:
    container_name: flyway_migrations
    image: flyway/flyway:latest
    command: "-url=jdbc:postgresql://vetclinic_postgres:5432/${DB_NAME} -user=${DB_USER_NAME} -password=${DB_USER_PASSWORD} migrate"
    volumes:
      - "./backend/migrations:/flyway/sql"
    networks:
      - vetclinic_service_network
    depends_on:
      vetclinic_postgres:
        condition: service_healthy

  pgadmin:
    container_name: pgadmin_vetclinic
    image: dpage/pgadmin4:latest
    ports:
      - "${PGADMIN_PORT}:80"
    networks:
      - vetclinic_service_network
    environment:
      PGADMIN_LISTEN_ADDRESS: pgadmin
      PGADMIN_LISTEN_PORT: 8080
      PGADMIN_DEFAULT_EMAIL: "${PGADMIN_DEFAULT_EMAIL}"
      PGADMIN_DEFAULT_PASSWORD: "${PGADMIN_DEFAULT_PASSWORD}"
    volumes:
      - "./local/pgadmin4/servers.json:/pgadmin4/servers.json"
    depends_on:
      vetclinic_postgres:
        condition: service_healthy

  backend:
    build: ./backend
    networks:
      - vetclinic_service_network
    ports:
      - "8000:8000"
    environment:
      DB_NAME: "${DB_NAME}"
      DB_USER_NAME: "${DB_USER_NAME}"
      DB_USER_PASSWORD: "${DB_USER_PASSWORD}"
      DB_HOST: vetclinic_postgres
      DB_PORT: "${DB_PORT}"
    depends_on:
      vetclinic_postgres:
        condition: service_healthy

  frontend:
    build: ./frontend
    networks:
      - vetclinic_service_network
    ports:
      - "80:80"

networks:
  vetclinic_service_network:
    driver: bridge
